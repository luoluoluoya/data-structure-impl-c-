//
// Created by 47302 on 2020/5/24.
//

#pragma once

#include <string.h>
#include <cmath>
//#include "../share/tool.h"

//����Bad Charactor Shift��
int *buildBC(char *P) {
    int *bc = new int[256];
    for (int i = 0; i < 256; bc[i++] = -1);
    for (size_t m = strlen(P), j = 0; j < m; ++j) {
        bc[P[j]] = j;
    }
    return bc;
}

int *buildGS(char *P) {

}


// ģʽ�� -1 �����ü����ͨ���

// ���ַ��� ģʽ�� P �� j �����ֲ�ƥ��ʱ�� Ҫ���� [i, i+j) ����λ�÷���һ����ȫƥ�䣬 ����ģʽ���� [0, j)������� T[i+j] ���ַ���
// ����ַ�����ģʽ���Ʊ� �õ������ַ���Ԫ����ģʽ���г��ֵ����λ�á� �ڲ������Ļ��ݵ�����£� ���ı���ĳ�ַ�����ʧ��ʱ��ֱ����ת��������λ�����ʧ���ַ����벢������һ�ֱȽϡ�����ģʽ���в����ڸ��ַ��� ��������Ԫ�ؽ��бȽ�

// ����ַ���Ԫ�ؽ϶����������������ַ�ƥ��ļ��ʼ��͡� �ڴ����ʧ�������£� ����Ӧ���������ʧ�����ṩ�Ľ�ѵ������㷨��Ч�ʣ� ʧ���λ��Խ���� �����ų��Ĵ��Ƚ��ַ�Ҳ��Խ��

int match(char *P, char *T) {
    int *bc = buildBC(P);        //Ԥ����
    size_t n = strlen(T), i = 0; //�ı������ȡ���ģʽ�����ַ��Ķ���λ��
    size_t m = strlen(P);        //ģʽ������
    while (n >= i + m) {          //�ڵ������Ҷ�ǰ����������ģʽ�������ܲ�ֹһ���ַ���
        //��ģʽ����ĩβ���ַ���ʼ����������ȶ�
        int j = m - 1;
        while (P[j] == T[i + j] && 0 <= --j);
        if (j < 0)                //������ƥ���׺ == ����ģʽ������˵���Ѿ���ȫƥ�䣬�ʷ���ƥ��λ��
            break;
        else                        //���򣬸���BC����Ӧ���ƶ�ģʽ����ʹ��T[i+j]��P[bc[T[i+j]]]����
            i += max(1, j - bc[T[i + j]]);
    }
    delete[] bc; //����BC��
    return i;
}